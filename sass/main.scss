@import "var", "function";
@mixin fonts {
  // similar to defining a function and use it in multiple places
  font: {
    size: $small;
    weight: 500;
    family: $sans;
  }
}

@mixin transitProps($val) {
  //when you add (), it allow's you to pass values into it.
  opacity: $val;
  transform: scale($val);
}
@mixin transit($props...) {
  // It's similar to using "rest operator" in JavaScript,( $props... )
  -webkit-transition: $props;
  transition: $props;
}

p {
  @include fonts; //using fonts method
  @include transitProps(1);
  @include transit(opacity 0.5s, transform0.4s);
}
p.leave {
  @include fonts;
  @include transitProps(0);
  @include transit(opacity 0.6s, transform0.7s);
}
//---------------------------------------------------------------------------------------------------------
// @extend : It's like you're extending class, in JS. You're going to inherite evertthing from that class .warn.
//

.warn {
  color: $bad;
  // used a function from (_function.scss) file below.
  font-size: double($med);
}
.error {
  @extend .warn;
  font-family: $sans;
}

// Here, we're going to extends from class, warn & error
.third {
  @extend .error;
  background-color: $backgound;
}

a {
  color: $colorGray;
  &:hover {
    text-decoration: underline;
  }
}
.link {
  font-size: $med;
  border: 1px solid salmon;
  // This is going to extend all properity inside of "a" tag.
  @extend a;
}

//---------------------------------------------------------------------------------------------------------
// partials ---> A file with (-) infront of it.
// @import : if you don't want to include "scss" files into your "css" partials
// to include, the "_" file, use @import and file name

// When we import another css file, once we save, it will automatically add it to our main.css file
@import "other.css";

//---------------------------------------------------------------------------------------------------------
// custom functions :
